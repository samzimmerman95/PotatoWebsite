{"version":3,"sources":["assets/FryFrame3.svg","assets/team/sam.png","assets/collection/1.png","assets/collection/2.png","assets/collection/3.png","assets/collection/4.png","assets/collection/5.png","assets/team/matt.png","assets/OpenSea.svg","assets/help_guide/Add_Polygon.png","assets/help_guide/Bridge.png","assets/help_guide/Bridge_Confirmed.png","assets/help_guide/Add_Token.png","assets/help_guide/Gas_Swap.png","assets/help_guide/Token_Swap.png","assets/help_guide/Bridge_Matic.png","assets/help_guide/Crypto_1.PNG","assets/help_guide/Crypto_3.PNG","assets/help_guide/Crypto_4.PNG","assets/help_guide/Crypto_5.PNG","assets/help_guide/Crypto_6.PNG","Connect.tsx","Title.tsx","MyCollection.tsx","Collection.tsx","MintModal.tsx","Mint.tsx","Team.tsx","Footer.tsx","Home.tsx","HelpGuide.tsx","NotFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Connect","props","useState","connected","setConnected","buttonText","setButtonText","buttonColor","setButtonColor","disabledButton","setDisabledButton","address","setAddress","isMetaMaskInstalled","ethereum","window","Boolean","isMetaMask","attemptConnection","a","request","method","accounts","length","connectToMatic","connectCallback","MetaMaskOnboarding","startOnboarding","console","error","desiredNetwork","params","chainId","POLYGON_MUMBAI_PARAMS","POLYGON_MAINNET_PARAMS","code","useEffect","log","className","type","onClick","disabled","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","Title","src","require","default","alt","MyCollection","collectionFound","setCollectionFound","allImages","setAllImages","imagesRender","setImagesRender","showAll","setShowAll","showButtonText","setShowButtonText","provider","getNetwork","alert","contract","balanceOf","signer","getAddress","balance","Number","walletOfOwner","then","result","sort","b","ownerWallet","myImages","i","tokenURI","uri","replace","fetch","slice","metadata","json","metadataJSON","push","url","image","imageList","map","item","index","itemNum","href","contractAddress","target","rel","Object","keys","checkData","Collection","showBorder","setShowBorder","onMouseEnter","onMouseLeave","openseaCollection","MintModal","success","Modal","show","onHide","onClose","backdrop","keyboard","waiting","Header","closeButton","Body","role","active","goConfetti","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","Footer","bodyText","Mint","count","setCount","buyDisabled","setBuyDisabled","incCounterStyle","setIncCounterStyle","decCounterStyle","setDecCounterStyle","cost","showModal","setShowModal","modalText","setModalText","modalSuccess","setModalSuccess","modalWaiting","setModalWaiting","modalConfetti","setModalConfetti","showTimer","setShowTimer","releaseTime","totalCost","toFixed","costWEI","parseFloat","mint","value","toString","wait","catch","err","message","error2","Date","now","date","onComplete","to","Team","Home","setEthereum","setProvider","setSigner","PotatoContract","setPotatoContract","ethers","providers","Web3Provider","getSigner","Contract","ContractABI","on","location","reload","collectionURL","HelpGuide","style","textDecoration","id","NotFound","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d74823f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FryFrame3.b0d40cd5.svg\";","export default __webpack_public_path__ + \"static/media/sam.1187edd5.png\";","export default __webpack_public_path__ + \"static/media/1.c8502506.png\";","export default __webpack_public_path__ + \"static/media/2.a1ffc585.png\";","export default __webpack_public_path__ + \"static/media/3.8f9c5ae5.png\";","export default __webpack_public_path__ + \"static/media/4.64d0235b.png\";","export default __webpack_public_path__ + \"static/media/5.cf96278a.png\";","export default __webpack_public_path__ + \"static/media/matt.b0380130.png\";","export default __webpack_public_path__ + \"static/media/OpenSea.89f1832f.svg\";","export default __webpack_public_path__ + \"static/media/Add_Polygon.d9293658.png\";","export default __webpack_public_path__ + \"static/media/Bridge.ed4a867c.png\";","export default __webpack_public_path__ + \"static/media/Bridge_Confirmed.25d334ae.png\";","export default __webpack_public_path__ + \"static/media/Add_Token.8115e125.png\";","export default __webpack_public_path__ + \"static/media/Gas_Swap.2f7c215f.png\";","export default __webpack_public_path__ + \"static/media/Token_Swap.dd1bcccf.png\";","export default __webpack_public_path__ + \"static/media/Bridge_Matic.1a85561c.png\";","export default __webpack_public_path__ + \"static/media/Crypto_1.2da9d3bb.PNG\";","export default __webpack_public_path__ + \"static/media/Crypto_3.151d1722.PNG\";","export default __webpack_public_path__ + \"static/media/Crypto_4.ec35eac8.PNG\";","export default __webpack_public_path__ + \"static/media/Crypto_5.e3149dc1.PNG\";","export default __webpack_public_path__ + \"static/media/Crypto_6.a229dc98.PNG\";","import React, { useEffect, useState } from \"react\";\nimport MetaMaskOnboarding from \"@metamask/onboarding\";\n\nexport default function Connect(props: {\n  connectCallback: () => void;\n  desiredNetwork: string;\n}) {\n  const [connected, setConnected] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Disconnected\");\n  const [buttonColor, setButtonColor] = useState(\"myaccentRed\");\n  const [disabledButton, setDisabledButton] = useState(false);\n  const [address, setAddress] = useState(\"\");\n\n  // Only run on load bc empty array second arg\n  useEffect(() => {\n    if (!isMetaMaskInstalled()) {\n      console.log(\"MetaMask not installed\");\n      setButtonText(\"Install MetaMask\");\n    } else {\n      console.log(\"MetaMask installed\");\n      attemptConnection();\n    }\n  }, []);\n\n  function isMetaMaskInstalled() {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const { ethereum }: any = window;\n    return Boolean(ethereum && ethereum.isMetaMask);\n  }\n\n  async function attemptConnection() {\n    const { ethereum }: any = window;\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n    if (accounts.length !== 0) {\n      connectToMatic();\n      setAddress(accounts[0]);\n      setConnected(true);\n      setButtonText(\"Connected\");\n      setButtonColor(\"myaccentGreen\");\n      props.connectCallback();\n    }\n  }\n\n  async function connectMetaMask() {\n    setDisabledButton(true);\n    const { ethereum }: any = window;\n    if (!isMetaMaskInstalled()) {\n      const onboarding = new MetaMaskOnboarding({});\n      onboarding.startOnboarding();\n    } else {\n      try {\n        // Will open the MetaMask UI\n        await ethereum.request({ method: \"eth_requestAccounts\" });\n        attemptConnection();\n      } catch (error) {\n        console.error(error);\n      }\n      setDisabledButton(false);\n    }\n  }\n\n  async function connectToMatic() {\n    const { ethereum }: any = window;\n    try {\n      if (props.desiredNetwork === \"maticmum\") {\n        await ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: POLYGON_MUMBAI_PARAMS.chainId }],\n        });\n      } else if (props.desiredNetwork === \"matic\") {\n        await ethereum.request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: POLYGON_MAINNET_PARAMS.chainId }],\n        });\n      }\n    } catch (switchError: any) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          if (props.desiredNetwork === \"maticmum\") {\n            await ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [POLYGON_MUMBAI_PARAMS],\n            });\n          } else if (props.desiredNetwork === \"matic\") {\n            await ethereum.request({\n              method: \"wallet_addEthereumChain\",\n              params: [POLYGON_MAINNET_PARAMS],\n            });\n          }\n        } catch (addError: any) {\n          // handle \"add\" error\n          console.error(\"Add Error:\", addError);\n        }\n      }\n      // handle other \"switch\" errors\n      console.error(\"Switch Error:\", switchError);\n    }\n  }\n\n  return (\n    <div className=\"mt-4 mb-4\">\n      <div className=\"d-flex justify-content-md-end\">\n        <button\n          type=\"button\"\n          className={`btn ${buttonColor} text-white mb-2 `}\n          onClick={connectMetaMask}\n          disabled={disabledButton}\n        >\n          {buttonText}\n        </button>\n      </div>\n      {connected ? (\n        <div className=\"d-flex justify-content-md-end text-white small\">\n          Account: {address}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nconst POLYGON_MAINNET_PARAMS = {\n  chainId: \"0x89\",\n  chainName: \"Polygon Mainnet\",\n  rpcUrls: [\"https://polygon-rpc.com/\"],\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18,\n  },\n  blockExplorerUrls: [\"https://polygonscan.com/\"],\n};\n\nconst POLYGON_MUMBAI_PARAMS = {\n  chainId: \"0x13881\",\n  chainName: \"Matic Mumbai\",\n  rpcUrls: [\"https://matic-mumbai.chainstacklabs.com\"],\n  nativeCurrency: {\n    name: \"MATIC\",\n    symbol: \"MATIC\",\n    decimals: 18,\n  },\n  blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"],\n};\n","import React from \"react\";\n\nexport default function Title() {\n  return (\n    <div className=\"row mb-3 mt-4\">\n      <div className=\"col-md-7 text-white px-4\">\n        <h1 className=\"text-center lh-1 myheaderFont\">\n          Potato <br /> Club\n        </h1>\n        <div>\n          The Potato Club is a collection of 10,000 rare, randomly generated\n          potato NFTs sprouting up on the Polygon network. We use the Polygon\n          network because it is less energy intensive, faster, and exponentially\n          cheaper to use, all while being built on top of Ethereum. At the\n          Potato Club, it doesn't matter if you like your potatoes roasted,\n          baked or mashed. All potato lovers are welcome!\n        </div>\n      </div>\n      <div className=\"col-md-5 d-flex align-items-center relativeContainer py-5 py-md-4\">\n        <img\n          // src={require(\"./assets/PotatoesV2.gif\").default}\n          src={require(\"./assets/team/sam.png\").default}\n          className=\"img-fluid rounded\"\n          alt=\"GIF\"\n        />\n        <img\n          src={require(\"./assets/FryFrame3.svg\").default}\n          className=\"titleBorder p-1 m-0\"\n          alt=\"French fry frame\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\ninterface myImagesData {\n  url: string;\n  name: string;\n}\n\nexport default function MyCollection(props: any) {\n  const [collectionFound, setCollectionFound] = useState(false);\n  const [allImages, setAllImages] = useState<JSX.Element[]>([]);\n  const [imagesRender, setImagesRender] = useState<JSX.Element[]>([]);\n  const [showAll, setShowAll] = useState(false);\n  const [showButtonText, setShowButtonText] = useState(\"Show All\");\n\n  async function checkData() {\n    if ((await props.provider.getNetwork()).name !== props.desiredNetwork) {\n      alert(\"Wrong network! Please switch to \" + props.desiredNetwork + \".\");\n      return;\n    }\n    let balance = await props.contract.balanceOf(props.signer.getAddress());\n    if (Number(balance)) {\n      let ownerWallet = await props.contract\n        .walletOfOwner(props.signer.getAddress())\n        .then((result: any) => {\n          let toSort: number[] = [...result];\n          return toSort.sort((a: number, b: number) => a - b);\n        });\n\n      let myImages: myImagesData[] = [];\n      for (let i = 0; i < ownerWallet.length; i++) {\n        let uri: string = await props.contract.tokenURI(ownerWallet[i]);\n        uri = uri.replace(/\\s+/g, \"\");\n        const metadata = await fetch(\"https://ipfs.io/ipfs/\" + uri.slice(7));\n        const metadataJSON = await metadata.json();\n        myImages.push({\n          url: \"https://ipfs.io/ipfs/\" + metadataJSON.image.slice(7),\n          name: metadataJSON.name,\n        });\n      }\n\n      const imageList = myImages.map((item: myImagesData, index: number) => {\n        let itemNum: string = item.url.slice(68, -4);\n        return (\n          <div\n            className=\"col d-flex flex-column mb-3 align-items-center text-white\"\n            key={itemNum}\n          >\n            <a\n              href={\n                \"https://testnets.opensea.io/assets/\" +\n                props.contractAddress +\n                \"/\" +\n                itemNum\n              }\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <img\n                src={item.url}\n                className=\"img-fluid rounded mb-1\"\n                alt=\"My Collection Item\"\n              />\n            </a>\n            {item.name}\n          </div>\n        );\n      });\n\n      setAllImages(imageList);\n      setImagesRender(imageList.slice(0, 8));\n      setCollectionFound(true);\n    }\n  }\n\n  function clickShow() {\n    if (showAll) {\n      setImagesRender(allImages.slice(0, 8));\n      setShowButtonText(\"Show All\");\n    } else {\n      setImagesRender(allImages);\n      setShowButtonText(\"Show Less\");\n    }\n    setShowAll(!showAll);\n  }\n\n  useEffect(() => {\n    if (Object.keys(props.contract).length !== 0) {\n      checkData();\n    }\n  }, [props.contract]);\n\n  if (collectionFound) {\n    return (\n      <div className=\"mb-3\">\n        <h2 className=\"text-white myheaderFont\">My Collection</h2>\n        <div className=\"row row-cols-md-4 mt-2\">{imagesRender}</div>\n        <div className=\"mt-2 d-flex justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn myaccent4 px-4 text-white\"\n            onClick={clickShow}\n          >\n            {showButtonText}\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React, { useState } from \"react\";\n\nexport default function Collection(props: any) {\n  const [showBorder, setShowBorder] = useState(0);\n  return (\n    <div className=\"mb-3\">\n      <h2 className=\"text-white myheaderFont\">The Collection</h2>\n      <div className=\"row mt-2 d-flex justify-content-center\">\n        <div\n          className=\"col-md-4 d-flex mb-4 mb-md-3 justify-content-center align-items-center relativeContainer\"\n          onMouseEnter={() => setShowBorder(1)}\n          onMouseLeave={() => setShowBorder(0)}\n        >\n          <img\n            src={require(\"./assets/collection/1.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Collection Item\"\n          />\n          {showBorder === 1 ? (\n            <img\n              src={require(\"./assets/FryFrame3.svg\").default}\n              className=\"collectionBorder p-0 m-0\"\n              alt=\"French fry frame\"\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <div\n          className=\"col-md-4 d-flex mb-4 mb-md-3 justify-content-center align-items-center relativeContainer\"\n          onMouseEnter={() => setShowBorder(2)}\n          onMouseLeave={() => setShowBorder(0)}\n        >\n          <img\n            src={require(\"./assets/collection/2.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Collection Item\"\n          />\n          {showBorder === 2 ? (\n            <img\n              src={require(\"./assets/FryFrame3.svg\").default}\n              className=\"collectionBorder p-0 m-0\"\n              alt=\"French fry frame\"\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <div\n          className=\"col-md-4 d-flex mb-4 mb-md-3 justify-content-center align-items-center relativeContainer\"\n          onMouseEnter={() => setShowBorder(3)}\n          onMouseLeave={() => setShowBorder(0)}\n        >\n          <img\n            src={require(\"./assets/collection/3.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Collection Item\"\n          />\n          {showBorder === 3 ? (\n            <img\n              src={require(\"./assets/FryFrame3.svg\").default}\n              className=\"collectionBorder p-0 m-0\"\n              alt=\"French fry frame\"\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n      <div className=\"row mt-md-2 d-flex justify-content-center\">\n        <div\n          className=\"col-md-4 d-flex mb-4 mb-md-3 justify-content-center align-items-center relativeContainer\"\n          onMouseEnter={() => setShowBorder(4)}\n          onMouseLeave={() => setShowBorder(0)}\n        >\n          <img\n            src={require(\"./assets/collection/4.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Collection Item\"\n          />\n          {showBorder === 4 ? (\n            <img\n              src={require(\"./assets/FryFrame3.svg\").default}\n              className=\"collectionBorder p-0 m-0\"\n              alt=\"French fry frame\"\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <div\n          className=\"col-md-4 d-flex mb-4 mb-md-3 justify-content-center align-items-center relativeContainer\"\n          onMouseEnter={() => setShowBorder(5)}\n          onMouseLeave={() => setShowBorder(0)}\n        >\n          <img\n            src={require(\"./assets/collection/5.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Collection Item\"\n          />\n          {showBorder === 5 ? (\n            <img\n              src={require(\"./assets/FryFrame3.svg\").default}\n              className=\"collectionBorder p-0 m-0\"\n              alt=\"French fry frame\"\n            />\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n      <div className=\"mt-2 d-flex justify-content-center\">\n        <a\n          className=\"btn myaccent4 px-4 text-white\"\n          href={props.openseaCollection}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Show More\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Confetti from \"react-dom-confetti\";\n\nexport default function MintModal(props: any) {\n  const config = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 35,\n    elementCount: 200,\n    dragFriction: 0.12,\n    duration: 6500,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\n  };\n\n  if (props.success) {\n    return (\n      <Modal\n        show={props.show}\n        onHide={props.onClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        {props.waiting ? (\n          <div>\n            <Modal.Header closeButton>\n              <Modal.Title>Transaction being mined ...</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"d-flex justify-content-center\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </Modal.Body>\n          </div>\n        ) : (\n          <div>\n            <Modal.Header closeButton>\n              <Modal.Title>Congratulations!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"d-flex justify-content-center\">\n                <Confetti active={props.goConfetti} config={config} />\n              </div>\n              You are offically a Potato Club NFT owner! To see your Potato\n              refresh the page, or visit OpenSea. Thank you for joining our\n              community, we hope to see you around on Discord or Twitter!\n            </Modal.Body>\n          </div>\n        )}\n\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            className=\"btn myaccent4 px-5 text-white\"\n            onClick={props.onClose}\n          >\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  } else {\n    return (\n      <Modal\n        show={props.show}\n        onHide={props.onClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>There was an error</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Your transaction has failed. Please try again. <br /> {props.bodyText}\n        </Modal.Body>\n        <Modal.Footer className=\"d-flex justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn myaccentRed px-4 text-white\"\n            onClick={props.onClose}\n          >\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Countdown from \"react-countdown\";\nimport MintModal from \"./MintModal\";\n\nexport default function Mint(props: any) {\n  const [count, setCount] = useState(1);\n  const [buyDisabled, setBuyDisabled] = useState(true);\n  const [incCounterStyle, setIncCounterStyle] = useState(\"\");\n  const [decCounterStyle, setDecCounterStyle] = useState(\"mintCountDisable\");\n  const [cost] = useState(3);\n  const [showModal, setShowModal] = useState(false);\n  const [modalText, setModalText] = useState(\"\");\n  const [modalSuccess, setModalSuccess] = useState(true);\n  const [modalWaiting, setModalWaiting] = useState(true);\n  const [modalConfetti, setModalConfetti] = useState(false);\n  const [showTimer, setShowTimer] = useState(true);\n  const [releaseTime] = useState(1638702747000);\n  // const [releaseTime] = useState(Date.now() + 10000);\n  var totalCost = (cost * count).toFixed(0);\n\n  useEffect(() => {\n    if (Object.keys(props.signer).length !== 0 && Date.now() >= releaseTime) {\n      setBuyDisabled(false);\n    }\n  }, [props.signer, showTimer, releaseTime]);\n\n  useEffect(() => {\n    if (Date.now() >= releaseTime) {\n      setShowTimer(false);\n    }\n  }, []);\n\n  function incrementCount() {\n    if (count < 20) {\n      setCount(count + 1);\n    }\n  }\n  function decrementCount() {\n    if (count > 1) {\n      setCount(count - 1);\n    }\n  }\n  function closeModal() {\n    setShowModal(false);\n    setModalText(\"\");\n    setModalSuccess(true);\n    setModalWaiting(true);\n    setModalConfetti(false);\n  }\n\n  useEffect(() => {\n    if (count === 1) {\n      setDecCounterStyle(\"mintCountDisable\");\n    } else if (count === 20) {\n      setIncCounterStyle(\"mintCountDisable\");\n    } else {\n      setDecCounterStyle(\"\");\n      setIncCounterStyle(\"\");\n    }\n  }, [count]);\n\n  async function clickMint() {\n    if ((await props.provider.getNetwork()).name !== props.desiredNetwork) {\n      alert(\"Wrong network! Please switch to \" + props.desiredNetwork + \".\");\n      return;\n    }\n    setBuyDisabled(true);\n\n    const costWEI = parseFloat(totalCost) * 10 ** 18;\n\n    await props.contract\n      .mint(props.signer.getAddress(), count, {\n        // gasLimit: 500000,\n        value: costWEI.toString(),\n      })\n      .then((result: any) => {\n        console.log(\"tx\", result);\n        setShowModal(true);\n        return result.wait();\n      })\n      .then((result: any) => {\n        setShowModal(true);\n        setModalWaiting(false);\n        setModalConfetti(true);\n        console.log(\"Wait result\", result);\n      })\n      .catch((err: any) => {\n        setModalSuccess(false);\n        try {\n          setModalText(err.error.message);\n        } catch (error) {\n          try {\n            setModalText(err.message);\n          } catch (error2) {\n            setModalText(err.toString());\n          }\n        } finally {\n          setShowModal(true);\n        }\n      });\n\n    setBuyDisabled(false);\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <h2 className=\"text-white myheaderFont\">Join the Club</h2>\n      <MintModal\n        show={showModal}\n        bodyText={modalText}\n        waiting={modalWaiting}\n        success={modalSuccess}\n        onClose={closeModal}\n        goConfetti={modalConfetti}\n      />\n      <div className=\"row\">\n        <div className=\"col-md text-white\">\n          <div className=\"mb-4\">\n            Each Potato Club NFT will only cost {cost} MATIC. If you need help\n            with the minting process, consult our guide below. Come on, join the\n            club!\n          </div>\n          <div className=\"text-center fs-4\">\n            {showTimer ? (\n              <Countdown\n                date={releaseTime}\n                onComplete={() => setShowTimer(false)}\n              />\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"col-md\">\n          <div className=\"row pt-2 pb-2 d-flex justify-content-center align-items-center\">\n            <div className=\"col-4 text-white d-flex justify-content-start\">\n              Amount\n            </div>\n            <div className=\"col-4 text-white d-flex justify-content-center align-items-center\">\n              <i\n                className={`fas fa-minus fa-2x px-4 ${decCounterStyle}`}\n                onClick={decrementCount}\n              ></i>\n              {count}\n              <i\n                className={`fas fa-plus fa-2x px-4 ${incCounterStyle}`}\n                onClick={incrementCount}\n              ></i>\n            </div>\n          </div>\n          <div className=\"row pt-2 pb-4 text-white d-flex justify-content-center\">\n            <div className=\"col-4 d-flex justify-content-start\">Total</div>\n            <div className=\"col-4 d-flex justify-content-center\">\n              {totalCost} MATIC\n            </div>\n          </div>\n          <div className=\"pt-2 d-flex justify-content-center\">\n            <button\n              type=\"button\"\n              className=\"btn myaccent4 px-5 text-white\"\n              onClick={clickMint}\n              disabled={buyDisabled}\n            >\n              Buy\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"mt-2 d-flex justify-content-center\">\n        <Link\n          to=\"/how-to-guide\"\n          className=\"btn myaccent4 px-5 text-white\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Help Guide\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Team() {\n  return (\n    <div className=\"mb-5\">\n      <h2 className=\"text-white myheaderFont\">The Team</h2>\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-md-3 d-flex flex-column justify-content-center align-items-center\">\n          <img\n            src={require(\"./assets/team/matt.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Team Member\"\n          />\n          <div className=\"text-white pt-2\">Snappy</div>\n        </div>\n        <div className=\"col-md-3 d-flex flex-column justify-content-center align-items-center\">\n          <img\n            src={require(\"./assets/team/sam.png\").default}\n            className=\"img-fluid rounded\"\n            alt=\"Team Member\"\n          />\n          <div className=\"text-white pt-2\">Shanky</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer(props: any) {\n  return (\n    <div>\n      <div className=\"col-md d-md-flex text-center justify-content-center align-items-center mb-4\">\n        <a\n          className=\"link-icon\"\n          href=\"https://twitter.com/Potato_Club_\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"fab fa-twitter fa-2x px-3\"></i>\n        </a>\n\n        <a\n          className=\"link-icon\"\n          href=\"https://discord.gg/mkdaSbE2TU\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"fab fa-discord fa-2x px-3\"></i>\n        </a>\n        <a\n          className=\"link-icon\"\n          href={props.openseaCollection}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img\n            src={require(\"./assets/OpenSea.svg\").default}\n            className=\"edit-link-icon link-photo mx-3 mb-3 mb-md-0\"\n            alt=\"OpenSea\"\n          />\n        </a>\n        <a\n          className=\"link-icon\"\n          href={\"https://mumbai.polygonscan.com/address/\" + props.address}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <i className=\"fas fa-file-contract fa-2x px-3\"></i>\n        </a>\n      </div>\n    </div>\n  );\n}\n\n// Color of icons is controlled in App.css\n","import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport ContractABI from \"./ContractABI.json\";\nimport Connect from \"./Connect\";\nimport Title from \"./Title\";\nimport MyCollection from \"./MyCollection\";\nimport Collection from \"./Collection\";\nimport Mint from \"./Mint\";\nimport Team from \"./Team\";\nimport Footer from \"./Footer\";\n\nfunction Home(props: any) {\n  const [ethereum, setEthereum] = useState();\n  const [provider, setProvider] = useState({});\n  const [signer, setSigner] = useState({});\n  const [PotatoContract, setPotatoContract] = useState({});\n  const [desiredNetwork] = useState(\"maticmum\");\n\n  function onConnected() {\n    console.log(\"Connection confirmed\");\n    let { ethereum }: any = window;\n    const provider = new ethers.providers.Web3Provider(ethereum, \"any\");\n    const signer = provider.getSigner();\n    const PotatoContract = new ethers.Contract(\n      props.contractAddress,\n      ContractABI,\n      signer\n    );\n    ethereum.on(\"chainChanged\", () => window.location.reload());\n    ethereum.on(\"accountsChanged\", () => window.location.reload());\n    setEthereum(ethereum);\n    setProvider(provider);\n    setSigner(signer);\n    setPotatoContract(PotatoContract);\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"container\">\n        <Connect\n          connectCallback={onConnected}\n          desiredNetwork={desiredNetwork}\n        ></Connect>\n        <Title></Title>\n        <MyCollection\n          provider={provider}\n          signer={signer}\n          contract={PotatoContract}\n          contractAddress={props.contractAddress}\n          desiredNetwork={desiredNetwork}\n        ></MyCollection>\n        <Collection openseaCollection={props.collectionURL}></Collection>\n        <Mint\n          provider={provider}\n          signer={signer}\n          contract={PotatoContract}\n          desiredNetwork={desiredNetwork}\n        ></Mint>\n        <Team></Team>\n        <Footer\n          address={props.contractAddress}\n          openseaCollection={props.collectionURL}\n        ></Footer>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HelpGuide(props: any) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"container text-white\">\n        <div className=\"mt-2 mb-3\">\n          <div className=\"d-flex justify-content-md-start myheaderFont\">\n            <Link\n              to=\"/\"\n              className=\"text-white\"\n              style={{ textDecoration: \"none\" }}\n            >\n              <h3>Potato Club </h3>\n            </Link>\n          </div>\n        </div>\n        <div className=\"row mb-5\">\n          <div className=\"col\"></div>\n          <div className=\"col-8\">\n            <div className=\"mb-3\">\n              <h2 className=\"text-center lh-1 myheaderFont\">\n                How to Purchase a Potato Club <br /> NFT on Polygon\n              </h2>\n              The Potato Club collection lives on the Polygon network. Polygon\n              is a scaling solution for the Ethereum blockchain, and connects to\n              it via sidechains. To purchase an NFT on Polygon, there are a few\n              simple steps that need to be completed.\n            </div>\n            <div className=\"mb-3\" id=\"metamask\">\n              <h3 className=\"text-white myheaderFont\">\n                Set up a MetaMask Wallet\n              </h3>\n              Potato Club will prompt and direct you to install{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://metamask.io\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                MetaMask\n              </a>{\" \"}\n              if it is not detected as an extension in your browser. This will\n              enable you to interact with Web3 applications and different\n              blockchains.\n            </div>\n            <div className=\"mb-3\" id=\"add-polygon\">\n              <h3 className=\"text-white myheaderFont\">Add Polygon to Wallet</h3>\n              If you are not already on the Polygon Mainnet, Potato Club will\n              prompt you automatically to add and switch to it when you connect\n              with MetaMask. You can now interact with the Polygon Mainnet\n              through your MetaMask wallet.\n              <div className=\"row d-flex justify-content-center mt-2\">\n                <div className=\"col-md-5 d-flex align-items-center\">\n                  {/* UPDATED IMAGE REQUIRED HERE */}\n                  <img\n                    src={require(\"./assets/help_guide/Add_Polygon.png\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Adding Polygon network to MetaMask\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"mb-3\" id=\"get-matic\">\n              <h3 className=\"text-white myheaderFont\">Get MATIC on Polygon</h3>\n              MATIC is the native token of the Polygon network (like ETH to the\n              Ethereum network) and is necessary to complete transactions. There\n              are several ways you can obtain MATIC if you do not already have\n              some in your wallet. We will break down different methods\n              depending on which stage you are starting from. <br /> <br />\n              It is helpful to be familiar with two practices, bridging and\n              swapping. Bridging is the process of moving a cryptocurrency from\n              one network to another. Typically, this is from the Ethereum\n              network to the Polygon network. We recommend the{\" \"}\n              <a\n                className=\"text-white\"\n                href={\n                  \"https://bridge.umbria.network/bridge/ethereum-polygon/eth\"\n                }\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Umbria Bridge\n              </a>{\" \"}\n              because of its lower fees. Swapping is the act of exchanging one\n              cryptocurrency token for another. For swapping we recommend{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://wallet.polygon.technology/token-swap/\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Polygon Token Swap\n              </a>\n              . The overall plan here is to bridge an asset to the Polygon\n              network, then if necessary, swap it for MATIC.\n            </div>\n            <div className=\"mb-3\" id=\"bridge-eth\">\n              <h3 className=\"text-white myheaderFont\">\n                ETH on Ethereum Mainnet\n              </h3>\n              Visit{\" \"}\n              <a\n                className=\"text-white\"\n                href={\n                  \"https://bridge.umbria.network/bridge/ethereum-polygon/eth\"\n                }\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Umbria Bridge\n              </a>{\" \"}\n              and connect to the application with MetaMask. Double check that\n              you are connected to the Ethereum Mainnet network in your wallet.\n              Enter the amount of ETH you wish to bridge, and you will see the\n              amount you will recieve on Polygon.\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-8 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Bridge.png\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Bridging ETH to Polygon network\"\n                  />\n                </div>\n              </div>\n              Confirm the details of the transaction, and click \"Send\". You will\n              have to confirm the transaction in MetaMask as well. Now wait for\n              the transaction to complete! <br /> <br />\n              When your transaction has been completed, you should be prompted\n              to \"Add Asset to MetaMask\". Click this will ensure your asset will\n              be visable, then open MetaMask and \"Add Token\".\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-5 mb-2 mb-md-0 d-flex align-items-center\">\n                  <img\n                    src={\n                      require(\"./assets/help_guide/Bridge_Confirmed.png\")\n                        .default\n                    }\n                    className=\"img-fluid rounded\"\n                    alt=\"Bridging ETH to Polygon network\"\n                  />\n                </div>\n                <div className=\"col-md-5 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Add_Token.png\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Confirm ETH Token on Polygon\"\n                  />\n                </div>\n              </div>\n              Now you should be able to see your ETH on Polygon in your wallet.\n              The last step is to swap ETH for MATIC. Starting with the{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://wallet.polygon.technology/gas-swap\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Polygon Gas Swap\n              </a>{\" \"}\n              to swap a small amount for MATIC so we can use it to pay for gas\n              in the next swap transaction. 1 MATIC is all you will need.\n              Finally, using the{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://wallet.polygon.technology/token-swap/\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Polygon Token Swap\n              </a>{\" \"}\n              to swap any larger amount of ETH for MATIC.\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-5 mb-2 mb-md-0 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Gas_Swap.png\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Swapping ETH for MATIC gas\"\n                  />\n                </div>\n                <div className=\"col-md-5 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Token_Swap.png\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Swapping ETH for MATIC\"\n                  />\n                </div>\n              </div>\n              Now you are ready to use your MATIC on Polygon!\n            </div>\n            <div className=\"mb-3\" id=\"bridge-matic\">\n              <h3 className=\"text-white myheaderFont\">\n                MATIC on Ethereum Mainnet\n              </h3>\n              Bridging MATIC from the Ethereum Mainnet to Polygon is by far the\n              simplest process. Visit{\" \"}\n              <a\n                className=\"text-white\"\n                href={\n                  \"https://bridge.umbria.network/bridge/ethereum-polygon/matic\"\n                }\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Umbria Bridge\n              </a>{\" \"}\n              and connect to the site with MetaMask. Double check that you are\n              connected to the Ethereum Mainnet network in your wallet. Enter\n              the amount of MATIC you wish to bridge, and you will see the\n              amount you will recieve on Polygon.\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-8 d-flex align-items-center\">\n                  <img\n                    src={\n                      require(\"./assets/help_guide/Bridge_Matic.png\").default\n                    }\n                    className=\"img-fluid rounded\"\n                    alt=\"Bridging MATIC to Polygon network\"\n                  />\n                </div>\n              </div>\n              Confirm the details of the transaction, and click \"Send\". You will\n              have to confirm the transaction in MetaMask as well. Once the\n              transaction is complete, you are ready to use your MATIC on\n              Polygon!\n            </div>\n            <div className=\"mb-3\" id=\"buy-matic\">\n              <h3 className=\"text-white myheaderFont\">Buy MATIC</h3>\n              If you want to buy MATIC directly and transfer it to your MetaMask\n              wallet, this is a way to do so while paying minimal fees. Download\n              the{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://crypto.com/us\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                crypto.com\n              </a>{\" \"}\n              mobile app, create and verify your account. Find MATIC, then click\n              \"Buy MATIC\".\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-4 mb-2 mb-md-0 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Crypto_1.PNG\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Buy MATIC from Crypto.com\"\n                  />\n                </div>\n                <div className=\"col-md-4 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Crypto_3.PNG\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Transfer MATIC from Crypto.com\"\n                  />\n                </div>\n              </div>\n              Once purchased, on the homepage click \"Transfer\", then \"Withdraw\".\n              Here we can transfer directly to our Polygon wallet, without\n              having to use a bridge. Select \"External Wallet\", \"MATIC\", then\n              enter your MetaMask wallet address. Be sure to select the\n              \"Polygon\" network.\n              <div className=\"row d-flex justify-content-center my-2\">\n                <div className=\"col-md-4 mb-2 mb-md-0 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Crypto_4.PNG\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Buy MATIC from Crypto.com\"\n                  />\n                </div>\n                <div className=\"col-md-4 mb-2 mb-md-0 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Crypto_5.PNG\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Buy MATIC from Crypto.com\"\n                  />\n                </div>\n                <div className=\"col-md-4 d-flex align-items-center\">\n                  <img\n                    src={require(\"./assets/help_guide/Crypto_6.PNG\").default}\n                    className=\"img-fluid rounded\"\n                    alt=\"Transfer MATIC from Crypto.com\"\n                  />\n                </div>\n              </div>\n              After you complete your transfer, you should see your MATIC in\n              your MetaMask wallet!\n              <br /> <br />\n              If you found this guide helpful we would love for you to join the{\" \"}\n              <a\n                className=\"text-white\"\n                href={\"https://potatoclub.art\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Potato Club\n              </a>{\" \"}\n              by minting your own, unique Potato Club NFT!\n            </div>\n          </div>\n          <div className=\"col\"></div>\n        </div>\n        <Footer\n          address={props.contractAddress}\n          openseaCollection={props.collectionURL}\n        ></Footer>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound(props: any) {\n  return (\n    <div className=\"container-fluid d-flex flex-column min-vh-100\">\n      <div className=\"flex-grow-1\">\n        <div className=\"container text-white\">\n          <div className=\"mt-2 mb-5\">\n            <div className=\"d-flex justify-content-md-start myheaderFont\">\n              <Link\n                to=\"/\"\n                className=\"text-white\"\n                style={{ textDecoration: \"none\" }}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <h3>Potato Club </h3>\n              </Link>\n            </div>\n          </div>\n          <div className=\"d-flex flex-column text-center mt-5\">\n            <h3 className=\"myheaderFont\">404 - Page Not Found</h3>\n            <div className=\"mt-2 d-flex justify-content-center\">\n              <Link to=\"/\" className=\"btn myaccent4 px-5 text-white\">\n                Go to Homepage\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer\n        address={props.contractAddress}\n        openseaCollection={props.collectionURL}\n      ></Footer>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport HelpGuide from \"./HelpGuide\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  const [contractAddress] = useState(\n    \"0xeD5A54a2b7800C3D1c66F0E601037738B8dF6f8B\"\n  );\n  const [collectionURL] = useState(\n    \"https://testnets.opensea.io/collection/potatoclub-maticv1\"\n  );\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              contractAddress={contractAddress}\n              collectionURL={collectionURL}\n            />\n          }\n        />\n        <Route\n          path=\"how-to-guide\"\n          element={\n            <HelpGuide\n              contractAddress={contractAddress}\n              collectionURL={collectionURL}\n            />\n          }\n        />\n        <Route\n          path=\"*\"\n          element={\n            <NotFound\n              contractAddress={contractAddress}\n              collectionURL={collectionURL}\n            />\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/Custom.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}